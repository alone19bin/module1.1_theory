                                                                                //Chapter 02

/*В Java исходный файл официально называется единицей кoмnиляции с расширением .java
Имя файла должно совпадать с именем класса
/*Многострочные комментарии */ 
     //Однострочные комментарии    
           /**Документирующие комментарии  - служат для создания НТМL-файла документации на программу. */   

Метод main () вызывается виртуальной машиной JVМ перед созданием любых объектов. String args [] объявляется параметр args, обозначающий массив экземпляров класса String. В объектах типа String 
хранятся символьные строки. В данном случае параметр args принимает любые арrументы командной строки, присутствующие во время выполнения программы. */

class Example {
/ / Эта программа начинае тся с вызова метода шain ()
public static void main(String[] args) {
        System.out.println("Простая программа на Java");
    }
}

/*println (). В данном случае метод println () отображает переданную ему текстовую строку. System.out это обозначения стандартного потока вывода. System обозначает предопределенный класс, предоставляющий доступ к системе, а out - 
поток вывода, связанный с консолью. */


//переменная - это именованная ячейка памяти, которой может быть присвоено значение в программе

class Example2 {
    public static void main(String[] args) {
        int num; //переменная с именем num, тип имя_ перененной=значение
        num = 100; //  присваивается значение 100
        System.out.println("Этo переменная num: " + num);
        num = num * 2;
        System.out.print(" Знaчeниe переменной num * 2 равно ");
        System.out.println(num);
    }
}
/*Вывод в терминале 
Это переменная num : 100
Значение переменной num * 2 равно 200*/

                                                                      //Условный оператор if

/*if(условие оператор), где условие обозначает логическое выражение. Если условие истинно, то оператор выполняется. А если условие ложно, то оператор пропускается. Рассмотримследующую строку кода:
if ( num < 100) 
{ System. out . println ( "num меньше 100" );}     Если num содержит значение меньше 100,то условное выражение истинно и вызывается метод println (). А если пере-
менная num содержит значение, большее или равное 100, то вызов метода println () пропускается. */

class  ifSample {
    public static void main(String[] args) {
        int x, у;  //объявляются две переменные - х и у. Для этого используется список, разделяемый запятыми
        x = 10;
        у = 20;
        if (x < у)
            System.out.println ("x меньше у " );
        x = x * 2;
        if(x == у)
            System.out.println ("x теперь равно у" );
        x = x * 2;
        if (x > у)
            System.out .println (" x теперь больше у" ) ;
        if (x == у)
            System.out . println ( " вы не увидите э того");  //этот оператор не будет ниче го выводить
    }
}
/* В терминал выводится
х меньше у
        х теперь равно у
        х теперь больше у  */


                                                                            //Оператор цикла for
//for (Инициализация: условие : усло:вне; итерация) onepaтop;  Логическое выражение для проверки значения переменной управления циклом. Если результат проверки условия истинен, то выполнение
цикла for продолжается. А если результат этой проверки ложен, то выполнение цикла прекращается.

class ForTest {
        public static void main(String[] args) {
            int x;
            for (x = 0; x < 10; x = x + 1)          // лучше использовать инкремент x++
                System.out.println(" Знaчeниe х: " + х);
        }
    }
    /*
        Эта программа выводит следующий результат:
        Значение х: О
        Значение х: 1
        Значение х 2
        Значение х 3
        Значение х 4

        Значение х: 5
        Значение х: 6
        Значение х: 7
        Значение х: 8
        Значение х: 9 */


class BlockTest {
    public static void main(String[] args)  {
        int x, y;
        y = 20;
// адресатом э того оператора цикла служит блок кода
        for (x = 0; x < 10; x++) {
            System.out.println( "Знaчeниe х: "+ x) ;
            System.out.println( "Знaчeниe у: " + y );
            y = y - 2;

/*  Эта программа выводит следующий результат:
            Значение х: О
            Значение у: 20
            Значение х: 1
            Значение у: 18
            Значение х: 2
            Значение у: 16
            Значение х: 3
            Значение у: 14
            Значение х: 4
            Значение у: 12
            Значение х: 5
            Значение у: 10
            Значение х: 6
            Значение у: 8
            Значение х: 7
            Значение у: 6
            Значение х: 8
            Значение у: 4
            Значение х: 9
            Значение у: 2  */
























































































































