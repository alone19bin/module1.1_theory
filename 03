                                                                                          //Chapter03

  /*В языке jаvа определены восемь примитивнъtх типов данных: byte, short, int,long, char, float, douЫe и boolean. Примитивные типы называют также про-
стыми, и в данной книге употребляются оба эти термина. Примитивные типы можно разделить на следующие четыре группы.
  - Целые числа. Эта группа включает в себя типы данных byte, short, int
и long, представляющие целые числа со знаком.
  - Числа с плавающей точкой(действителъные числа). Эта группа включает в себя типы данных float и douЫe, представляющие числа с точностью до определенного знака после десятичной точки.
  - Символы. Эта группа включает в себя тип данных char, представляющий
символы, например буквы и цифры, из определенного набора.
  - Логические значения. Эта группа включает в себя тип данных boolean, специально предназначенный для представления логических истинных и ложных значений. */

  //В charJava используется кодировка в Юникод (Unicode) , определяющем полный набор международных символов на всех известных языках мира. Юникод унифицирует десятки наборов символов, в том числе латинский,греческий, арабский алфавит, 
кириллицу, иврит, японские и тайские иероглифы и многие другие символы. Для хранения этих символов требуется 16 бит, и поэтому в java тип char является 16-разрядным. Отрицательных значений типа char не существует.



            //пример с long
class Light {
    public static void main(String[] args) {
        int lightspeed;
        long days;
        long seconds;
        long distance;
        // приблизительная скорость света , миль в секунду
        lightspeed = 186000;
        days = 1000;            // указать количества дней
        seconds = days * 24 * 60 * 60;             // преобразовать в секунды
        distance = lightspeed * seconds;           // вычислить расстояние
        System.out.print(" Зa " + days);
        System.out.print(" дней свет пройдет около ");
        System.out.println(distance + " миль.");
    }
}
        /* Выводит следующий результат:
        За 1000 дней свет пройдет около 1607040 0000000 миль . */


          //пример с double
class Area {
    public static void main(String[] args) {
        double pi, r, a;
        r = 10.8;       //радиус окружности
        pi = 3.1416;       //числа=о пи
        a = pi * r * r;      // вычислить площадь круг
                System.out.println("Плoщaдь круга равна 11 "+ a);
    }
}
//Вывод: Плoщaдь круга равна 11 366.4362


        //пример c char
class CharDemo {
    public static void main(String[] args) {
        char chl, ch2;
        chl = 88; // код символа Х
        ch2 = 'У';
        System.out.print("chl и ch2 : 11 ");
        System.out.print(chl + " " + ch2);
    }
}
        //Вывод:      chl и ch2 : Х У


        //пример c char. Символьные переменные ведут себя как целочисленные значения
class CharDemo2 {
    public static void main(String[] args) {
        char chl;
        chl = 'Х';
        System.out.println(" ch l содержит " + chl);
        chl++;                          // увеличить на единицу значение переменной chl
        System.out.println(" ch l теперь содержит " + chl);
            }
}
        //Вывод:      chl содержит Х
        //            chl теперь содержит У


         //пример c char
class BoolTest {
    public static void main(String[] args) {
        boolean b;
        b = false;
        System.out.println("b равно " + b);
        b = true;
        System.out.println("b равно " + b);
                    //значение типа boolean может управлять оператором if
        if (b)
            System.out.println(" Этoт код выполняется.");
        b = false;
        if (b)
            System.out.println(" Этoт код не выполняется.");
        System.out.println(" lO > 9 равно " + (10 > 9) );         // результат сравнения - значение типа boolean
    }
}
        /* Вывод:   b равно false
                    b равно true
                    Этoт код выполняется.
                    lO > 9 равно true   */





















































